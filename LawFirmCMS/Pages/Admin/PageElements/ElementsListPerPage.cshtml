@page
@using LawFirmCMS.Data.Enums
@using LawFirmCMS.Helpers
@inject LawFirmCMS.Data.ApplicationDbContext DbContext
@model LawFirmCMS.Pages.Admin.PageElements.ElementsListPerPageModel
@{
    Layout = "~/Pages/Admin/Shared/_AdminLayout.cshtml";
}
@{
    ViewData["Title"] = "Index";
    ViewData["NavigationPages"] = "active";
}

<h1>List of elements for @Model.PageName page:</h1>

<p>
    <a asp-page="Create" asp-route-id=@Model.Id>Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PageElements[0].Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PageElements[0].Order)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PageElements[0].TextData)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PageElements[0].BinaryData)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PageElements)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    <form method="post" >
                        <button asp-page-handler="ChangeOrder" name="direction" value="up" class="btn btn-light">Up</button> |
                        <button asp-page-handler="ChangeOrder" name="direction" value="down" class="btn btn-light">Down</button>
                        <input type="hidden" name="page" value="@Model.Id" />
                        <input type="hidden" name="id" value="@item.Id" />
                    </form>
                </td>
                <td>
                    @if(item.Type == PageElementType.Heading){
                        @Html.DisplayFor(modelItem => item.TextData)
                    }
                    else if (item.Type == PageElementType.RichText){
                        @Html.Raw( item.TextData)
                    }
                    else if (item.Type == PageElementType.Employee){
                        @Html.DisplayFor(modelItem => DbContext.Employees.FirstOrDefault(e => e.Id == int.Parse(item.TextData)).Login)
                    }                  
                </td>
                <td >
                    @if (item.BinaryData != null)
                    {
                        var popupId = $"popupContainer_{item.Id}";
                        var buttonId = $"openPopupBtn_{item.Id}";
                        var closeButtonId = $"closePopupBtn_{item.Id}";

                        <button class="btn btn-light" id="@buttonId">Show image</button>

                        <div id="@popupId" class="popup-container" style="display:none;">
                            <div id="@closeButtonId" class="btn close-btn">&times;</div>
                            @{
                                var mimeType = item.GetMimeType();
                            }
                            <img src="data:@mimeType;base64,@Convert.ToBase64String(item.BinaryData)" alt="Image" class="popup-image" />
                        </div>
                    }
                    else
                    {
                       <p>No binary data</p>
                    }
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
        <script src="site.js"></script>
    </tbody>
</table>

@section Scripts {
    <script src="site.js"></script>
}